["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\nreagent.ratom.debug = false;\nreagent.ratom.generation = (0);\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn (cljs.core.deref(reagent.ratom._running));\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nvar and__4221__auto__ = (len === reagent.ratom.arr_len(y));\nif(and__4221__auto__){\nvar i = (0);\nwhile(true){\nvar or__4223__auto__ = (i === len);\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__20860 = (i + (1));\ni = G__20860;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn and__4221__auto__;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__20661 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20662 = obj;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20662);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20661);\n}});\n/**\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\n(r.captured = null);\n\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\n(r.dirty_QMARK_ = false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5758__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5758__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5758__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn (r.captured = [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__20688_SHARP_,p2__20689_SHARP_,p3__20690_SHARP_){\nvar G__20692 = p1__20688_SHARP_;\nG__20692.push(p2__20689_SHARP_);\n\nG__20692.push(p3__20690_SHARP_);\n\nreturn G__20692;\n}),[],this$.watches)):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_20861 = (a[i]);\nvar f_20862 = (a[(i + (1))]);\n(f_20862.cljs$core$IFn$_invoke$arity$4 ? f_20862.cljs$core$IFn$_invoke$arity$4(k_20861,this$,old,new$) : f_20862.call(null,k_20861,this$,old,new$));\n\nvar G__20863 = ((2) + i);\ni = G__20863;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__20696 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20697 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20697);\n\ntry{return cljs.core._deref(a);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20696);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\">\");\n});\nreagent.ratom.rea_queue = null;\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\n(reagent.ratom.rea_queue = []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue = null);\n\nvar n__4706__auto___20864 = q.length;\nvar i_20865 = (0);\nwhile(true){\nif((i_20865 < n__4706__auto___20864)){\n(q[i_20865])._queued_run();\n\nvar G__20866 = (i_20865 + (1));\ni_20865 = G__20866;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\n}\n\nvar old_value = self__.state;\n(self__.state = new_value);\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type = true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/RAtom\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__20738 = arguments.length;\nswitch (G__20738) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4850__auto__ = [];\nvar len__4829__auto___20868 = arguments.length;\nvar i__4830__auto___20869 = (0);\nwhile(true){\nif((i__4830__auto___20869 < len__4829__auto___20868)){\nargs_arr__4850__auto__.push((arguments[i__4830__auto___20869]));\n\nvar G__20870 = (i__4830__auto___20869 + (1));\ni__4830__auto___20869 = G__20870;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4851__auto__ = (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4851__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__20742){\nvar map__20743 = p__20742;\nvar map__20743__$1 = cljs.core.__destructure_map(map__20743);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20743__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20743__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq20736){\nvar G__20737 = cljs.core.first(seq20736);\nvar seq20736__$1 = cljs.core.next(seq20736);\nvar self__4816__auto__ = this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20737,seq20736__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__20756 = f;\nvar G__20757 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__20758 = (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __20871 = o.reagReactionCache;\nvar __20872__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__20871,k);\n(o.reagReactionCache = __20872__$1);\n\nif((!((obj == null)))){\n(obj.reaction = null);\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__20756,G__20757,G__20758) : reagent.ratom.make_reaction.call(null,G__20756,G__20757,G__20758));\n})();\nvar v = cljs.core._deref(r__$1);\n(o.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\n(obj.reaction = r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5756__auto__ = self__.reaction;\nif((temp__5756__auto__ == null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5756__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)))));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\n}));\n\n(reagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type = true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/Track\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__20767 = (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});\nvar G__20768 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__20769 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__20767,G__20768,G__20769) : reagent.ratom.make_reaction.call(null,G__20767,G__20768,G__20769));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4835__auto__ = [];\nvar len__4829__auto___20874 = arguments.length;\nvar i__4830__auto___20875 = (0);\nwhile(true){\nif((i__4830__auto___20875 < len__4829__auto___20874)){\nargs__4835__auto__.push((arguments[i__4830__auto___20875]));\n\nvar G__20876 = (i__4830__auto___20875 + (1));\ni__4830__auto___20875 = G__20876;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ = ((((1) < args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq20770){\nvar G__20771 = cljs.core.first(seq20770);\nvar seq20770__$1 = cljs.core.next(seq20770);\nvar self__4816__auto__ = this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20771,seq20770__$1);\n}));\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4835__auto__ = [];\nvar len__4829__auto___20877 = arguments.length;\nvar i__4830__auto___20878 = (0);\nwhile(true){\nif((i__4830__auto___20878 < len__4829__auto___20877)){\nargs__4835__auto__.push((arguments[i__4830__auto___20878]));\n\nvar G__20879 = (i__4830__auto___20878 + (1));\ni__4830__auto___20878 = G__20879;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ = ((((1) < args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq20779){\nvar G__20780 = cljs.core.first(seq20779);\nvar seq20779__$1 = cljs.core.next(seq20779);\nvar self__4816__auto__ = this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20780,seq20779__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__20785 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20786 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20786);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20785);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\n(self__.state = newstate);\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)))));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20789 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20789) : f.call(null,G__20789));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20792 = a__$1._peek();\nvar G__20793 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20792,G__20793) : f.call(null,G__20792,G__20793));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20796 = a__$1._peek();\nvar G__20797 = x;\nvar G__20798 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20796,G__20797,G__20798) : f.call(null,G__20796,G__20797,G__20798));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5756__auto__ = self__.reaction;\nif((temp__5756__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5756__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type = true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/RCursor\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5758__auto__ = v.destroy;\nif((temp__5758__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5758__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5756__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5756__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5756__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nvar reagent$ratom$IDisposable$dispose_BANG_$dyn_20882 = (function (this$){\nvar x__4521__auto__ = (((this$ == null))?null:this$);\nvar m__4522__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ == null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4522__auto__.call(null,this$));\n} else {\nvar m__4519__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4519__auto__ == null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4519__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n});\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nreturn reagent$ratom$IDisposable$dispose_BANG_$dyn_20882(this$);\n}\n});\n\nvar reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_20883 = (function (this$,f){\nvar x__4521__auto__ = (((this$ == null))?null:this$);\nvar m__4522__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ == null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4522__auto__.call(null,this$,f));\n} else {\nvar m__4519__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4519__auto__ == null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4519__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n});\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nreturn reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_20883(this$,f);\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nvar reagent$ratom$IRunnable$run$dyn_20884 = (function (this$){\nvar x__4521__auto__ = (((this$ == null))?null:this$);\nvar m__4522__auto__ = (reagent.ratom.run[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ == null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4522__auto__.call(null,this$));\n} else {\nvar m__4519__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4519__auto__ == null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4519__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n});\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nreturn reagent$ratom$IRunnable$run$dyn_20884(this$);\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__20813 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20814 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20814);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20813);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\n(self__.dirty_QMARK_ = true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\n(self__.watching = derefed);\n\nvar seq__20817_20887 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__20818_20888 = null;\nvar count__20819_20889 = (0);\nvar i__20820_20890 = (0);\nwhile(true){\nif((i__20820_20890 < count__20819_20889)){\nvar w_20891 = chunk__20818_20888.cljs$core$IIndexed$_nth$arity$2(null,i__20820_20890);\ncljs.core._add_watch(w_20891,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__20892 = seq__20817_20887;\nvar G__20893 = chunk__20818_20888;\nvar G__20894 = count__20819_20889;\nvar G__20895 = (i__20820_20890 + (1));\nseq__20817_20887 = G__20892;\nchunk__20818_20888 = G__20893;\ncount__20819_20889 = G__20894;\ni__20820_20890 = G__20895;\ncontinue;\n} else {\nvar temp__5754__auto___20896 = cljs.core.seq(seq__20817_20887);\nif(temp__5754__auto___20896){\nvar seq__20817_20897__$1 = temp__5754__auto___20896;\nif(cljs.core.chunked_seq_QMARK_(seq__20817_20897__$1)){\nvar c__4649__auto___20898 = cljs.core.chunk_first(seq__20817_20897__$1);\nvar G__20899 = cljs.core.chunk_rest(seq__20817_20897__$1);\nvar G__20900 = c__4649__auto___20898;\nvar G__20901 = cljs.core.count(c__4649__auto___20898);\nvar G__20902 = (0);\nseq__20817_20887 = G__20899;\nchunk__20818_20888 = G__20900;\ncount__20819_20889 = G__20901;\ni__20820_20890 = G__20902;\ncontinue;\n} else {\nvar w_20903 = cljs.core.first(seq__20817_20897__$1);\ncljs.core._add_watch(w_20903,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__20904 = cljs.core.next(seq__20817_20897__$1);\nvar G__20905 = null;\nvar G__20906 = (0);\nvar G__20907 = (0);\nseq__20817_20887 = G__20904;\nchunk__20818_20888 = G__20905;\ncount__20819_20889 = G__20906;\ni__20820_20890 = G__20907;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__20821 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__20822 = null;\nvar count__20823 = (0);\nvar i__20824 = (0);\nwhile(true){\nif((i__20824 < count__20823)){\nvar w = chunk__20822.cljs$core$IIndexed$_nth$arity$2(null,i__20824);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__20908 = seq__20821;\nvar G__20909 = chunk__20822;\nvar G__20910 = count__20823;\nvar G__20911 = (i__20824 + (1));\nseq__20821 = G__20908;\nchunk__20822 = G__20909;\ncount__20823 = G__20910;\ni__20824 = G__20911;\ncontinue;\n} else {\nvar temp__5754__auto__ = cljs.core.seq(seq__20821);\nif(temp__5754__auto__){\nvar seq__20821__$1 = temp__5754__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__20821__$1)){\nvar c__4649__auto__ = cljs.core.chunk_first(seq__20821__$1);\nvar G__20912 = cljs.core.chunk_rest(seq__20821__$1);\nvar G__20913 = c__4649__auto__;\nvar G__20914 = cljs.core.count(c__4649__auto__);\nvar G__20915 = (0);\nseq__20821 = G__20912;\nchunk__20822 = G__20913;\ncount__20823 = G__20914;\ni__20824 = G__20915;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__20821__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__20916 = cljs.core.next(seq__20821__$1);\nvar G__20917 = null;\nvar G__20918 = (0);\nvar G__20919 = (0);\nseq__20821 = G__20916;\nchunk__20822 = G__20917;\ncount__20823 = G__20918;\ni__20824 = G__20919;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{(self__.caught = null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e20825){var e = e20825;\n(self__.state = e);\n\n(self__.caught = e);\n\nreturn (self__.dirty_QMARK_ = false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state = res);\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__20826){\nvar self__ = this;\nvar map__20827 = p__20826;\nvar map__20827__$1 = cljs.core.__destructure_map(map__20827);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20827__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20827__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20827__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20827__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\n(this$.auto_run = auto_run__$1);\n} else {\n}\n\nif((!((on_set == null)))){\n(this$.on_set = on_set);\n} else {\n}\n\nif((!((on_dispose == null)))){\n(this$.on_dispose = on_dispose);\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn (this$.nocache_QMARK_ = no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\n(self__.watching = null);\n\n(self__.state = null);\n\n(self__.auto_run = null);\n\n(self__.dirty_QMARK_ = true);\n\nvar seq__20828_20920 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__20829_20921 = null;\nvar count__20830_20922 = (0);\nvar i__20831_20923 = (0);\nwhile(true){\nif((i__20831_20923 < count__20830_20922)){\nvar w_20924 = chunk__20829_20921.cljs$core$IIndexed$_nth$arity$2(null,i__20831_20923);\ncljs.core._remove_watch(w_20924,this$__$1);\n\n\nvar G__20925 = seq__20828_20920;\nvar G__20926 = chunk__20829_20921;\nvar G__20927 = count__20830_20922;\nvar G__20928 = (i__20831_20923 + (1));\nseq__20828_20920 = G__20925;\nchunk__20829_20921 = G__20926;\ncount__20830_20922 = G__20927;\ni__20831_20923 = G__20928;\ncontinue;\n} else {\nvar temp__5754__auto___20929 = cljs.core.seq(seq__20828_20920);\nif(temp__5754__auto___20929){\nvar seq__20828_20930__$1 = temp__5754__auto___20929;\nif(cljs.core.chunked_seq_QMARK_(seq__20828_20930__$1)){\nvar c__4649__auto___20931 = cljs.core.chunk_first(seq__20828_20930__$1);\nvar G__20932 = cljs.core.chunk_rest(seq__20828_20930__$1);\nvar G__20933 = c__4649__auto___20931;\nvar G__20934 = cljs.core.count(c__4649__auto___20931);\nvar G__20935 = (0);\nseq__20828_20920 = G__20932;\nchunk__20829_20921 = G__20933;\ncount__20830_20922 = G__20934;\ni__20831_20923 = G__20935;\ncontinue;\n} else {\nvar w_20936 = cljs.core.first(seq__20828_20930__$1);\ncljs.core._remove_watch(w_20936,this$__$1);\n\n\nvar G__20937 = cljs.core.next(seq__20828_20930__$1);\nvar G__20938 = null;\nvar G__20939 = (0);\nvar G__20940 = (0);\nseq__20828_20920 = G__20937;\nchunk__20829_20921 = G__20938;\ncount__20830_20922 = G__20939;\ni__20831_20923 = G__20940;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5758__auto__ = this$__$1.on_dispose_arr;\nif((temp__5758__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5758__auto__;\nvar n__4706__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4706__auto__)){\nvar fexpr__20835_20941 = (a[i]);\n(fexpr__20835_20941.cljs$core$IFn$_invoke$arity$1 ? fexpr__20835_20941.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__20835_20941.call(null,this$__$1));\n\nvar G__20942 = (i + (1));\ni = G__20942;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5756__auto__ = this$__$1.on_dispose_arr;\nif((temp__5756__auto__ == null)){\nreturn (this$__$1.on_dispose_arr = [f__$1]);\n} else {\nvar a = temp__5756__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\n\nvar oldval = self__.state;\n(self__.state = newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20839 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__20839) : f__$1.call(null,G__20839));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20840 = a__$1._peek_at();\nvar G__20841 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__20840,G__20841) : f__$1.call(null,G__20840,G__20841));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20842 = a__$1._peek_at();\nvar G__20843 = x;\nvar G__20844 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__20842,G__20843,G__20844) : f__$1.call(null,G__20842,G__20843,G__20844));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.flush_BANG_();\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (((cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5758__auto___20943 = self__.caught;\nif((temp__5758__auto___20943 == null)){\n} else {\nvar e_20944 = temp__5758__auto___20943;\nthrow e_20944;\n}\n\nvar non_reactive_20945 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_20945){\nreagent.ratom.flush_BANG_();\n} else {\n}\n\nif(((non_reactive_20945) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_20946 = self__.state;\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_20946,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_20946,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type = true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/Reaction\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4835__auto__ = [];\nvar len__4829__auto___20947 = arguments.length;\nvar i__4830__auto___20948 = (0);\nwhile(true){\nif((i__4830__auto___20948 < len__4829__auto___20947)){\nargs__4835__auto__.push((arguments[i__4830__auto___20948]));\n\nvar G__20949 = (i__4830__auto___20948 + (1));\ni__4830__auto___20948 = G__20949;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ = ((((1) < args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__20848){\nvar map__20849 = p__20848;\nvar map__20849__$1 = cljs.core.__destructure_map(map__20849);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20849__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20849__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20849__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq20846){\nvar G__20847 = cljs.core.first(seq20846);\nvar seq20846__$1 = cljs.core.next(seq20846);\nvar self__4816__auto__ = this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20847,seq20846__$1);\n}));\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f = f);\n\n(r.auto_run = (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\n(self__.changed = true);\n\n(self__.state = newval);\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((((!(self__.changed))) && (((cljs.core.not(other.changed)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)))))))));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\n}));\n\n(reagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type = true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/Wrapper\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react-dom","~$module$node_modules$react_dom$index","~$react","~$module$node_modules$react$index"],"~:use-macros",["^ ","~$warn","~$reagent.debug","~$dev?","^D"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","~$with-let",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","~$reagent.ratom","~:macro",true],"~$reaction",["^ ","^K",["^L",[["~$&","^N"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^O","~$reagent.ratom/reaction","^Q","^R","^S",true],"~$run!",["^ ","^K",["^L",[["~$&","^N"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^O","~$reagent.ratom/run!","^Q","^R","^S",true]],"^O","^R","~:op","^Q","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^10","~$obj","~$goog.object","~$cljs.core","^13","~$goog","^14","^12","^12","~$reagent.impl.batching","^15","~$clojure.set","^16","~$util","^10","~$s","^16","~$batch","^15","^D","^D"],"~:seen",["^G",["~:require","~:require-macros"]],"~:uses",null,"^1;",["^ ","^R","^R","^D","^D","^13","^13"],"~:form",["^L",["~$ns","^R",["^L",["~:refer-clojure","~:exclude",["^H"]]],["^L",["^1;",["^R"]]],["^L",["^1:",["^10","~:as","^17"],["^D","~:refer-macros",["^C","^E"]],["^15","^1A","^18"],["^16","^1A","~$s"],["^12","^1A","^11"]]]]],"~:flags",["^ ","^1;",["^G",[]],"^1:",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^10","^D","^15","^16","^12"]],"^Q","^R","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1624516707796,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [warn dev?]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)\n        len (alength a)]\n    (loop [i 0]\n      (when (< i len)\n        (let [k (aget a i)\n              f (aget a (inc i))]\n          (f k this old new))\n        (recur (+ 2 i))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.ratom/debug","reagent.ratom/generation","reagent.ratom/-running","cljs.core.atom","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","and__4221__auto__","i","or__4223__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__20661","*ratom-context*-temp-val__20662","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5758__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc","reagent.ratom/remove-w","cljs.core.dissoc","reagent.ratom/notify-w","a","p1__20688#","p2__20689#","p3__20690#","cljs.core/reduce-kv","G__20692","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__20696","*ratom-context*-temp-val__20697","cljs.core/-deref","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4706__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4461__auto__","writer__4462__auto__","opt__4463__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__20738","reagent.ratom/atom","args-arr__4850__auto__","len__4829__auto__","i__4830__auto__","argseq__4851__auto__","cljs.core/IndexedSeq","p__20742","map__20743","cljs.core/--destructure-map","cljs.core.get","seq20736","G__20737","cljs.core/first","cljs.core/next","self__4816__auto__","reagent.ratom/cached-reaction","destroy","m","G__20756","G__20757","G__20758","reagent.ratom/make-reaction","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5756__auto__","cljs.core._EQ_","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__20767","G__20768","G__20769","args__4835__auto__","argseq__4836__auto__","reagent.ratom/track","seq20770","G__20771","reagent.ratom/track!","seq20779","G__20780","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__20785","*ratom-context*-temp-val__20786","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__20789","G__20792","G__20793","G__20796","G__20797","G__20798","reagent.ratom/cursor","src","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","reagent$ratom$IDisposable$dispose_BANG_$dyn","x__4521__auto__","m__4522__auto__","reagent.ratom/dispose!","goog/typeOf","m__4519__auto__","cljs.core/missing-protocol","reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent$ratom$IRunnable$run$dyn","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__20826","map__20827","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","oldval","G__20839","G__20840","G__20841","G__20842","G__20843","G__20844","*ratom-context*-orig-val__20813","*ratom-context*-temp-val__20814","cljs.core/set","seq__20817","cljs.core/seq","chunk__20818","count__20819","i__20820","temp__5754__auto__","cljs.core/chunked-seq?","c__4649__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__20821","chunk__20822","count__20823","i__20824","cljs.core/-remove-watch","e20825","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__20828","chunk__20829","count__20830","i__20831","fexpr__20835","p__20848","map__20849","seq20846","G__20847","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]],"~:used-vars",["^G",["~$cljs.core/--destructure-map","~$cljs.core/PROTOCOL_SENTINEL","~$reagent.ratom/check-derefs","~$reagent.ratom/generation","~$reagent.ratom/make-track!","~$reagent.ratom/run","~$reagent.ratom/remove-w","~$cljs.core/=","~$cljs.core/dec","~$reagent.ratom/->RAtom","~$cljs.core/-write","~$cljs.core/IndexedSeq","~$cljs.core/-deref","~$cljs.core/pr-writer","~$cljs.core/hash","~$cljs.core/-reset!","~$cljs.core/count","~$cljs.core/deref","~$goog/typeOf","~$reagent.ratom/arr-len","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/apply","~$goog/getUid","~$reagent.ratom/flush!","~$reagent.ratom/notify-deref-watcher!","~$cljs.core/dissoc","~$reagent.ratom/check-watches","~$reagent.ratom/with-let-destroy","~$cljs.core/chunk-rest","~$cljs.core/atom","~$reagent.ratom/debug","~$reagent.ratom/rea-enqueue","~$reagent.ratom/RCursor","~$cljs.core/set","~$reagent.ratom/make-wrapper","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$reagent.ratom/IReactiveAtom","~$reagent.ratom/track","~$reagent.impl.util/make-partial-fn","~$cljs.core/reset!","~$reagent.ratom/cached-reaction","~$reagent.ratom/Wrapper","~$cljs.core/-add-watch","~$reagent.ratom/track!","~$reagent.ratom/dispose!","~$reagent.ratom/->Reaction","~$reagent.ratom/running","~$reagent.ratom/make-reaction","~$reagent.ratom/IRunnable","~$reagent.ratom/notify-w","~$reagent.ratom/rea-queue","~$reagent.ratom/add-on-dispose!","~$cljs.core/get-in","~$reagent.impl.batching/ratom-flush","~$cljs.core/swap!","~$reagent.ratom/arr-eq","~$cljs.core/get","~$reagent.ratom/handle-reaction-change","~$goog.object/set","~$reagent.ratom/temp-reaction","~$cljs.core/-nth","~$clojure.set/difference","~$cljs.core/-remove-watch","~$cljs.core/missing-protocol","~$reagent.ratom/run-in-reaction","~$reagent.ratom/->Track","~$reagent.impl.batching/schedule","~$cljs.core/next","~$reagent.ratom/*ratom-context*","~$reagent.ratom/IDisposable","~$reagent.ratom/->Wrapper","~$reagent.ratom/Track","~$cljs.core/IDeref","~$reagent.ratom/cursor","~$cljs.core/not","~$reagent.ratom/make-track","~$reagent.ratom/add-w","~$cljs.core/assoc","~$cljs.core/assoc-in","~$reagent.ratom/-running","~$reagent.ratom/Reaction","~$cljs.core/reduce-kv","~$reagent.ratom/RAtom","~$cljs.core/first","~$reagent.ratom/reactive?","~$reagent.ratom/atom","~$reagent.ratom/deref-capture","~$cljs.core/+","~$cljs.core/array","~$reagent.ratom/in-context","~$reagent.ratom/with-let-values","~$cljs.core/inc","~$reagent.ratom/->RCursor","~$cljs.core/chunked-seq?","~$reagent.ratom/pr-atom"]]],"~:cache-keys",["~#cmap",[["^1G","reagent/impl/batching.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["^14","^13","^D","^10"]]],["^1G","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","~$goog.dom.HtmlElement"]]],["^1G","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","~$goog.array","~$goog.asserts"]]],["^1G","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^47","~$goog.labs.userAgent.util","^12","~$goog.string.internal"]]],["^1G","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^48","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4:"]]],["^1G","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^48"]]],["^1G","reagent/impl/util.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^13","~$clojure.string"]]],["^1G","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","reagent/ratom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^13","^10","^D","^15","^16","^12"]]],["^1G","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^48"]]],"~:SHADOW-TIMESTAMP",[1624356825000,1624356825000,1624355197000],["^1G","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^48","~$goog.reflect"]]],["^1G","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^48","~$goog.fs.blob","^4;","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4=","^4>","^4?","^4@"]]],["^1G","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^47","^48","~$goog.html.SafeUrl","^4?","^4@","^4:"]]],["^1G","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^48","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4E","~$goog.html.SafeStyle","^4G","^4<","~$goog.html.uncheckedconversions","^4?","^4:"]]],["^1G","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1G","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^47","^48","~$goog.dom.TagName","~$goog.dom.tags","^4E","^4K","~$goog.html.SafeStyleSheet","^4G","^4<","^4F","^4=","^4>","~$goog.labs.userAgent.browser","^12","^4?","^4@","^4:"]]],["^1G","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^12"]]],["^1G","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^47"]]],["^1G","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1G","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^47","^48","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",[]]],["^1G","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^47","^12"]]],["^1G","clojure/string.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^13","^4U","~$goog.string.StringBuffer"]]],["^1G","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","~$goog.dom.safe","^4L","^4?","^4:"]]],["^1G","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^4:"]]],["^1G","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^47","^48","^4I","~$goog.math"]]],["^1G","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^48","^4J","^4E","^4K","^4Q","^4G","^4<","^4?","^4:","^4="]]],["^1G","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14"]]],["^1G","cljs/core.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","~$goog.math.Long","~$goog.math.Integer","^4U","^12","^47","~$goog.Uri","^4["]]],["^1G","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^4?","^4@","^4F","^48"]]],["^1G","reagent/debug.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^13"]]],["^1G","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^4?","^4K","^4@","^47","^12","^48","^4:"]]],["^1G","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^4C"]]],["^1G","clojure/set.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^13"]]],["^1G","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^48","^4U"]]],["^1G","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^42",["^ ","^43",null,"^44",["^G",[]],"^45",["^14","^48","^4@"]]]]],"~:clj-info",["^ ","jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/compiler.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/js_deps.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/instant.clj",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojure/1.10.2/clojure-1.10.2.jar!/clojure/core.clj",1622325593000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojure/1.10.2/clojure-1.10.2.jar!/clojure/set.clj",1622325593000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/core.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojure/1.10.2/clojure-1.10.2.jar!/clojure/edn.clj",1622325593000,"jar:file:/home/osboxes/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1624355192000,"jar:file:/home/osboxes/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1624355192000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/util.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojure/1.10.2/clojure-1.10.2.jar!/clojure/pprint.clj",1622325593000,"jar:file:/home/osboxes/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1624355192000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/impl.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1624356823000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/passes/and_or.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map/base64.clj",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojure/1.10.2/clojure-1.10.2.jar!/clojure/instant.clj",1622325593000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/passes.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/externs.clj",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojure/1.10.2/clojure-1.10.2.jar!/clojure/string.clj",1622325593000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map/base64_vlq.clj",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojure/1.10.2/clojure-1.10.2.jar!/clojure/java/io.clj",1622325593000,"jar:file:/home/osboxes/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1624355192000,"jar:file:/home/osboxes/.m2/repository/org/clojure/data.json/2.3.1/data.json-2.3.1.jar!/clojure/data/json.clj",1622327333000,"jar:file:/home/osboxes/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1624356823000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/tagged_literals.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/env.cljc",1624355197000,"jar:file:/home/osboxes/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1624356823000,"jar:file:/home/osboxes/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map.clj",1624355197000,"jar:file:/home/osboxes/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1624355192000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^G",["reagent$ratom$IReactiveAtom$","reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^B",["^ ","^C","^D","^E","^D"],"^F",["^G",["^H"]],"^I",["^ ","^J",["^ ","^K",["^L",[["^M","~$&","^N"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","^O","^P","^Q","^R","^S",true],"^T",["^ ","^K",["^L",[["~$&","^N"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^O","^U","^Q","^R","^S",true],"^V",["^ ","^K",["^L",[["~$&","^N"]]],"^W","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^O","^X","^Q","^R","^S",true]],"~:shadow/js-access-properties",["^G",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^O","^R","^Z",null,"^[",["^ ","^10","^10","^11","^12","^13","^13","^14","^14","^12","^12","^15","^15","^16","^16","^17","^10","~$s","^16","^18","^15","^D","^D"],"^19",["^G",["^1:","^1;"]],"^1<",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",105,"^8",8,"^9",105,"^:",15,"~:private",true,"^K",["^L",["~$quote",["^L",[["~$a","~$writer","~$opts","~$s"]]]]]],"^5[",true,"^O","^3[","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^L",[["~$a","^61","^62","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^8",1,"~:variadic?",false,"^7",105,"~:ret-tag","~$any","^9",105,"~:max-fixed-arity",4,"~:fn-var",true,"^K",["^L",["^60",["^L",[["~$a","^61","^62","~$s"]]]]]],"~$->RCursor",["^ ","^5Z",null,"^5",["^ ","~:protocols",["^G",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","^2M","^3E","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",257,"^9",257,"^K",["^L",["^60",["^L",[["~$ratom","~$path","^T","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^3E","^6D"]],"^W","Positional factory function for reagent.ratom/RCursor."],"^6<",["^G",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2M","^3E","^6D"]],"^O","^3Y","^6","reagent/ratom.cljs","^:",17,"^63",["^L",[["^6G","^6H","^T","^6I","^6J"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",257,"^67","^2H","^9",257,"^69",5,"^6:",true,"^K",["^L",["^60",["^L",[["^6G","^6H","^T","^6I","^6J"]]]]],"^6K",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^3E","^6D"]],"^W","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",63,"^8",8,"^9",63,"^:",29,"^5[",true,"^K",["^L",["^60",["^L",[["~$derefed"]]]]],"^W","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^5[",true,"^O","^2@","^6","reagent/ratom.cljs","^:",29,"^63",["^L",[["^6M"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",63,"^67",["^G",[null,"^68","~$clj-nil"]],"^9",63,"^69",1,"^6:",true,"^K",["^L",["^60",["^L",[["^6M"]]]]],"^W","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",115,"^8",8,"^9",115,"^:",19,"^5[",true,"^K",["^L",["^60",["^L",[["~$r"]]]]]],"^5[",true,"^O","^2G","^6","reagent/ratom.cljs","^:",19,"^63",["^L",[["~$r"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",115,"^67","^68","^9",115,"^69",1,"^6:",true,"^K",["^L",["^60",["^L",[["~$r"]]]]]],"~$in-context",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",36,"^8",8,"^9",36,"^:",18,"^5[",true,"^K",["^L",["^60",["^L",[["^11","~$f"]]]]],"^W","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"^5[",true,"^O","^3V","^6","reagent/ratom.cljs","^:",18,"^63",["^L",[["^11","~$f"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",36,"^9",36,"^69",2,"^6:",true,"^K",["^L",["^60",["^L",[["^11","~$f"]]]]],"^W","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"~$make-track",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",237,"^8",7,"^9",237,"^:",17,"^K",["^L",["^60",["^L",[["~$f","~$args"]]]]]],"^O","^3H","^6","reagent/ratom.cljs","^:",17,"^63",["^L",[["~$f","^6R"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",237,"^67","^3D","^9",237,"^69",2,"^6:",true,"^K",["^L",["^60",["^L",[["~$f","^6R"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^6<",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^2M","~$cljs.core/IMeta","^3E","^6D","~$cljs.core/IWithMeta"]],"^O","^3O","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",137,"~:record",false,"^9",137,"~:tag","~$function","^6K",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^6U","^3E","^6D","^6V"]]],"^H",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",182,"^8",7,"^9",182,"^:",11,"^K",["^L",["^60",["^L",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^W","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^66",true,"~:fixed-arity",1,"^69",1,"^63",[["~$x"]],"^K",["^L",[["~$x"],["~$x","~$&",["^ ","^6[",["^70","^71"]]]]],"^65",["^L",[null,null]]]],"^O","^3R","^6","reagent/ratom.cljs","^:",11,"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["~$x"]],"^K",["^L",[["~$x"],["~$x","~$&",["^ ","^6[",["^70","^71"]]]]],"^65",["^L",[null,null]]],"^63",[["~$x"]],"^64",null,"^73",1,"^65",["^L",[null,null]],"^8",1,"^66",true,"~:methods",[["^ ","^73",1,"^66",false,"^6Y","^3O"],["^ ","^73",1,"^66",true,"^6Y","^3O"]],"^7",182,"^9",182,"^69",1,"^6:",true,"^K",["^L",[["~$x"],["~$x","~$&",["^ ","^6[",["^70","^71"]]]]],"^W","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",89,"^8",8,"^9",89,"^:",16,"^5[",true,"^K",["^L",["^60",["^L",[["~$this","~$old","~$new"]]]]]],"^5[",true,"^O","^2Z","^6","reagent/ratom.cljs","^:",16,"^63",["^L",[["^76","^77","^78"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",89,"^67","^6N","^9",89,"^69",3,"^6:",true,"^K",["^L",["^60",["^L",[["^76","^77","^78"]]]]]],"~$->Reaction",["^ ","^5Z",null,"^5",["^ ","^6<",["^G",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2M","^2Y","^3B","^3E","^6D"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^6E","^6F","^7",365,"^9",365,"^K",["^L",["^60",["^L",[["~$f","^6I","~$dirty?","~$nocache?","~$watching","^6J","~$auto-run","~$caught"]]]]],"^6K",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^3E","^6D"]],"^W","Positional factory function for reagent.ratom/Reaction."],"^6<",["^G",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2M","^2Y","^3B","^3E","^6D"]],"^O","^2V","^6","reagent/ratom.cljs","^:",18,"^63",["^L",[["~$f","^6I","^7:","^7;","^7<","^6J","^7=","^7>"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",365,"^67","^3M","^9",365,"^69",8,"^6:",true,"^K",["^L",["^60",["^L",[["~$f","^6I","^7:","^7;","^7<","^6J","^7=","^7>"]]]]],"^6K",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^3E","^6D"]],"^W","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",601,"^8",7,"^9",601,"^:",19,"^K",["^L",["^60",["^L",[["~$value","~$callback-fn","^6R"]]]]]],"^O","^2J","^6","reagent/ratom.cljs","^:",19,"^63",["^L",[["^7@","^7A","^6R"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",601,"^67","^2R","^9",601,"^69",3,"^6:",true,"^K",["^L",["^60",["^L",[["^7@","^7A","^6R"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",135,"~:protocol-info",["^ ","^74",["^ "]],"^9",135,"~:sigs",["^ "],"~:jsdoc",["^L",["@interface"]]],"^7C",true,"^O","^2M","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",135,"^7D",["^ ","^74",["^ "]],"~:info",null,"^9",135,"^6Y","^68","^7E",["^ "],"~:impls",["^G",["^2H","^3D","^3M","^3O"]],"^7F",["^L",["@interface"]]],"~$track",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",247,"^8",7,"^9",247,"^:",12,"^K",["^L",["^60",["^L",[["~$f","~$&","^6R"]]]]],"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^L",["~$f","^6R"]]],"^K",["^L",[["~$f","~$&","^6R"]]],"^65",["^L",[null]]]],"^O","^2N","^6","reagent/ratom.cljs","^:",12,"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^L",["~$f","^6R"]]],"^K",["^L",[["~$f","~$&","^6R"]]],"^65",["^L",[null]]],"^63",[["^L",["~$f","^6R"]]],"^64",null,"^73",1,"^65",["^L",[null]],"^8",1,"^66",true,"^74",[["^ ","^73",1,"^66",true,"^6Y","^3D"]],"^7",247,"^67","^68","^9",247,"^69",1,"^6:",true,"^K",["^L",[["~$f","~$&","^6R"]]]],"~$dispose!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",347,"^8",4,"^9",347,"^:",12,"~:protocol","^3B","^W",null,"^K",["^L",["^60",["^L",[["^76"]]]]]],"^7K","^3B","^O","^2U","^6","reagent/ratom.cljs","^:",12,"^63",["^L",[["^76"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",346,"^67","^68","^9",347,"^69",1,"^6:",true,"^K",["^L",["^60",["^L",[["^76"]]]]],"^W",null],"~$arr-eq",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",27,"^8",17,"^9",27,"^:",23,"^6Y","~$boolean","^5[",true,"^K",["^L",["^60",["^L",[["~$x","~$y"]]]]]],"^5[",true,"^O","^34","^6","reagent/ratom.cljs","^:",23,"^63",["^L",[["~$x","~$y"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",27,"^67","^7M","^9",27,"^69",2,"^6Y","^7M","^6:",true,"^K",["^L",["^60",["^L",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",353,"^8",8,"^9",353,"^:",30,"^5[",true,"^K",["^L",["^60",["^L",[["^76","~$sender","^77","^78"]]]]]],"^5[",true,"^O","^36","^6","reagent/ratom.cljs","^:",30,"^63",["^L",[["^76","^7O","^77","^78"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",353,"^67","^68","^9",353,"^69",4,"^6:",true,"^K",["^L",["^60",["^L",[["^76","^7O","^77","^78"]]]]]],"~$run",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",351,"^8",4,"^9",351,"^:",7,"^7K","^2Y","^W",null,"^K",["^L",["^60",["^L",[["^76"]]]]]],"^7K","^2Y","^O","^1X","^6","reagent/ratom.cljs","^:",7,"^63",["^L",[["^76"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",350,"^67","^68","^9",351,"^69",1,"^6:",true,"^K",["^L",["^60",["^L",[["^76"]]]]],"^W",null],"~$add-on-dispose!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",348,"^8",4,"^9",348,"^:",19,"^7K","^3B","^W",null,"^K",["^L",["^60",["^L",[["^76","~$f"]]]]]],"^7K","^3B","^O","^30","^6","reagent/ratom.cljs","^:",19,"^63",["^L",[["^76","~$f"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",346,"^67","^68","^9",348,"^69",2,"^6:",true,"^K",["^L",["^60",["^L",[["^76","~$f"]]]]],"^W",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",524,"^8",16,"^9",524,"^:",29,"^5[",true],"^5[",true,"^O","^38","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",524,"^9",524,"^6Y","^3M"],"~$make-track!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",240,"^8",7,"^9",240,"^:",18,"^K",["^L",["^60",["^L",[["~$f","^6R"]]]]]],"^O","^1W","^6","reagent/ratom.cljs","^:",18,"^63",["^L",[["~$f","^6R"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",240,"^67","^68","^9",240,"^69",2,"^6:",true,"^K",["^L",["^60",["^L",[["~$f","^6R"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",30,"^5[",true],"^5[",true,"^O","^1V","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",12,"^9",12,"^6Y","~$number"],"~$run-in-reaction",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",527,"^8",7,"^9",527,"^:",22,"^K",["^L",["^60",["^L",[["~$f","^11","~$key","^7P","^62"]]]]],"^W","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^O","^3=","^6","reagent/ratom.cljs","^:",22,"^63",["^L",[["~$f","^11","^7W","^7P","^62"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",527,"^67","^68","^9",527,"^69",5,"^6:",true,"^K",["^L",["^60",["^L",[["~$f","^11","^7W","^7P","^62"]]]]],"^W","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^7C",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",346,"^7D",["^ ","^74",["^ ","^7J",[["^76"]],"^7Q",[["^76","~$f"]]]],"^9",346,"^7E",["^ ","~:dispose!",["^ ","^O","^7J","^K",["^L",[["^76"]]],"^W",null],"~:add-on-dispose!",["^ ","^O","^7Q","^K",["^L",[["^76","~$f"]]],"^W",null]],"^7F",["^L",["@interface"]]],"^7C",true,"^O","^3B","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",346,"^7D",["^ ","^74",["^ ","^7J",[["^76"]],"^7Q",[["^76","~$f"]]]],"^7G",null,"^9",346,"^6Y","^68","^7E",["^ ","^7Y",["^ ","^O","^7J","^K",["^L",[["^76"]]],"^W",null],"^7Z",["^ ","^O","^7Q","^K",["^L",[["^76","~$f"]]],"^W",null]],"^7H",["^G",["^3M"]],"^7F",["^L",["@interface"]]],"~$check-watches",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",74,"^8",8,"^9",74,"^:",21,"^5[",true,"^K",["^L",["^60",["^L",[["^77","^78"]]]]]],"^5[",true,"^O","^2B","^6","reagent/ratom.cljs","^:",21,"^63",["^L",[["^77","^78"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",74,"^9",74,"^69",2,"^6:",true,"^K",["^L",["^60",["^L",[["^77","^78"]]]]]],"~$with-let-destroy",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",333,"^8",7,"^9",333,"^:",23,"^K",["^L",["^60",["^L",[["~$v"]]]]]],"^O","^2C","^6","reagent/ratom.cljs","^:",23,"^63",["^L",[["~$v"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",333,"^67",["^G",["^68","^6N"]],"^9",333,"^69",1,"^6:",true,"^K",["^L",["^60",["^L",[["~$v"]]]]]],"~$make-reaction",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",515,"^8",7,"^9",515,"^:",20,"^K",["^L",["^60",["^L",[["~$f","~$&",["^ ","^6[",["^7=","~$on-set","~$on-dispose"]]]]]]],"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^L",["~$f",["^ ","^6[",["^7=","^82","^83"]]]]],"^K",["^L",[["~$f","~$&",["^ ","^6[",["^7=","^82","^83"]]]]],"^65",["^L",[null]]]],"^O","^2X","^6","reagent/ratom.cljs","^:",20,"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^L",["~$f",["^ ","^6[",["^7=","^82","^83"]]]]],"^K",["^L",[["~$f","~$&",["^ ","^6[",["^7=","^82","^83"]]]]],"^65",["^L",[null]]],"^63",[["^L",["~$f",["^ ","^6[",["^7=","^82","^83"]]]]],"^64",null,"^73",1,"^65",["^L",[null]],"^8",1,"^66",true,"^74",[["^ ","^73",1,"^66",true,"^6Y","^3M"]],"^7",515,"^67","^68","^9",515,"^69",1,"^6:",true,"^K",["^L",[["~$f","~$&",["^ ","^6[",["^7=","^82","^83"]]]]]],"~$add-w",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",79,"^8",8,"^9",79,"^:",13,"^5[",true,"^K",["^L",["^60",["^L",[["^76","^7W","~$f"]]]]]],"^5[",true,"^O","^3I","^6","reagent/ratom.cljs","^:",13,"^63",["^L",[["^76","^7W","~$f"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",79,"^9",79,"^69",3,"^6:",true,"^K",["^L",["^60",["^L",[["^76","^7W","~$f"]]]]]],"~$Reaction",["^ ","^6T",8,"^6<",["^G",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2M","^2Y","^3B","^3E","^6D"]],"^O","^3M","^6","reagent/ratom.cljs","^:",18,"^6W",true,"^8",10,"^7",365,"^6X",false,"^9",365,"^6Y","^6Z","^6K",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^3E","^6D"]]],"~$flush!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",121,"^8",7,"^9",121,"^:",13,"^K",["^L",["^60",["^L",[[]]]]]],"^O","^2?","^6","reagent/ratom.cljs","^:",13,"^63",["^L",[[]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",121,"^67","^6N","^9",121,"^69",0,"^6:",true,"^K",["^L",["^60",["^L",[[]]]]]],"~$RCursor",["^ ","^6T",5,"^6<",["^G",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2M","^3E","^6D"]],"^O","^2H","^6","reagent/ratom.cljs","^:",17,"^6W",true,"^8",10,"^7",257,"^6X",false,"^9",257,"^6Y","^6Z","^6K",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^3E","^6D"]]],"~$cached-reaction",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",192,"^8",8,"^9",192,"^:",23,"^5[",true,"^K",["^L",["^60",["^L",[["~$f","~$o","~$k","^11","~$destroy"]]]]]],"^5[",true,"^O","^2Q","^6","reagent/ratom.cljs","^:",23,"^63",["^L",[["~$f","~$o","~$k","^11","^89"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",192,"^67","^68","^9",192,"^69",5,"^6:",true,"^K",["^L",["^60",["^L",[["~$f","~$o","~$k","^11","^89"]]]]]],"~$Track",["^ ","^6T",3,"^6<",["^G",["^6?","^6@","^2M","^3E","^6D"]],"^O","^3D","^6","reagent/ratom.cljs","^:",15,"^6W",true,"^8",10,"^7",216,"^6X",false,"^9",216,"^6Y","^6Z","^6K",["^G",["^6?","^6@","^3E","^6D"]]],"~$debug",["^ ","^O","^2F","^6","reagent/ratom.cljs","^7",11,"^8",1,"^9",11,"^:",24,"^6Y","^7M","^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",19,"^9",11,"^:",24,"^6Y","^7M"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",20,"^9",13,"^:",28,"^5[",true],"^5[",true,"^O","^3L","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",13,"^9",13,"^6Y","~$cljs.core/Atom"],"~$cursor",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",319,"^8",7,"^9",319,"^:",13,"^K",["^L",["^60",["^L",[["~$src","^6H"]]]]]],"^O","^3F","^6","reagent/ratom.cljs","^:",13,"^63",["^L",[["^8?","^6H"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",319,"^67","^2H","^9",319,"^69",2,"^6:",true,"^K",["^L",["^60",["^L",[["^8?","^6H"]]]]]],"~$Wrapper",["^ ","^6T",4,"^6<",["^G",["^6=","^6>","^6?","^6B","^6C","^3E","^6D"]],"^O","^2R","^6","reagent/ratom.cljs","^:",17,"^6W",true,"^8",10,"^7",554,"^6X",false,"^9",554,"^6Y","^6Z","^6K",["^G",["^6=","^6>","^6?","^6B","^6C","^3E","^6D"]]],"~$running",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",21,"^8",7,"^9",21,"^:",14,"^K",["^L",["^60",["^L",[[]]]]]],"^O","^2W","^6","reagent/ratom.cljs","^:",14,"^63",["^L",[[]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",21,"^67","^7U","^9",21,"^69",0,"^6:",true,"^K",["^L",["^60",["^L",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^7C",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",350,"^7D",["^ ","^74",["^ ","^7P",[["^76"]]]],"^9",350,"^7E",["^ ","~:run",["^ ","^O","^7P","^K",["^L",[["^76"]]],"^W",null]],"^7F",["^L",["@interface"]]],"^7C",true,"^O","^2Y","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",350,"^7D",["^ ","^74",["^ ","^7P",[["^76"]]]],"^7G",null,"^9",350,"^6Y","^68","^7E",["^ ","^8C",["^ ","^O","^7P","^K",["^L",[["^76"]]],"^W",null]],"^7H",["^G",["^3M"]],"^7F",["^L",["@interface"]]],"~$reactive?",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",16,"^9",15,"^:",25,"^6Y","^7M","^K",["^L",["^60",["^L",[[]]]]]],"^O","^3Q","^6","reagent/ratom.cljs","^:",25,"^63",["^L",[[]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",15,"^67","^7M","^9",15,"^69",0,"^6Y","^7M","^6:",true,"^K",["^L",["^60",["^L",[[]]]]]],"~$deref-capture",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",44,"^8",8,"^9",44,"^:",21,"^5[",true,"^K",["^L",["^60",["^L",[["~$f","~$r"]]]]],"^W","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"^5[",true,"^O","^3S","^6","reagent/ratom.cljs","^:",21,"^63",["^L",[["~$f","~$r"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",44,"^67","^68","^9",44,"^69",2,"^6:",true,"^K",["^L",["^60",["^L",[["~$f","~$r"]]]]],"^W","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",113,"^8",20,"^9",113,"^:",29,"^5[",true],"^5[",true,"^O","^2[","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",113,"^9",113,"^6Y","^6N"],"~$with-let-values",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",337,"^8",7,"^9",337,"^:",22,"^K",["^L",["^60",["^L",[["^7W"]]]]]],"^O","^3W","^6","reagent/ratom.cljs","^:",22,"^63",["^L",[["^7W"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",337,"^67",["^G",["^68","~$array"]],"^9",337,"^69",1,"^6:",true,"^K",["^L",["^60",["^L",[["^7W"]]]]]],"~$track!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",251,"^8",7,"^9",251,"^:",13,"^K",["^L",["^60",["^L",[["~$f","~$&","^6R"]]]]],"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^L",["~$f","^6R"]]],"^K",["^L",[["~$f","~$&","^6R"]]],"^65",["^L",[null]]]],"^O","^2T","^6","reagent/ratom.cljs","^:",13,"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^L",["~$f","^6R"]]],"^K",["^L",[["~$f","~$&","^6R"]]],"^65",["^L",[null]]],"^63",[["^L",["~$f","^6R"]]],"^64",null,"^73",1,"^65",["^L",[null]],"^8",1,"^66",true,"^74",[["^ ","^73",1,"^66",true,"^6Y","^68"]],"^7",251,"^67","^68","^9",251,"^69",1,"^6:",true,"^K",["^L",[["~$f","~$&","^6R"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",20,"^9",10,"^:",35,"~:dynamic",true,"~:declared",true],"^O","^3A","^6","reagent/ratom.cljs","^:",35,"^8",1,"^8K",true,"^7",10,"^8L",true,"^9",10,"^6Y","^68"],"~$check-derefs",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",546,"^8",7,"^9",546,"^:",19,"^K",["^L",["^60",["^L",[["~$f"]]]]]],"^O","^1U","^6","reagent/ratom.cljs","^:",19,"^63",["^L",[["~$f"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",546,"^67","~$cljs.core/IVector","^9",546,"^69",1,"^6:",true,"^K",["^L",["^60",["^L",[["~$f"]]]]]],"~$remove-w",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",84,"^8",8,"^9",84,"^:",16,"^5[",true,"^K",["^L",["^60",["^L",[["^76","^7W"]]]]]],"^5[",true,"^O","^1Y","^6","reagent/ratom.cljs","^:",16,"^63",["^L",[["^76","^7W"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",84,"^9",84,"^69",2,"^6:",true,"^K",["^L",["^60",["^L",[["^76","^7W"]]]]]],"~$->Wrapper",["^ ","^5Z",null,"^5",["^ ","^6<",["^G",["^6=","^6>","^6?","^6B","^6C","^3E","^6D"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^6E","^6F","^7",554,"^9",554,"^K",["^L",["^60",["^L",[["^6I","~$callback","~$changed","^6J"]]]]],"^6K",["^G",["^6=","^6>","^6?","^6B","^6C","^3E","^6D"]],"^W","Positional factory function for reagent.ratom/Wrapper."],"^6<",["^G",["^6=","^6>","^6?","^6B","^6C","^3E","^6D"]],"^O","^3C","^6","reagent/ratom.cljs","^:",17,"^63",["^L",[["^6I","^8Q","^8R","^6J"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",554,"^67","^2R","^9",554,"^69",4,"^6:",true,"^K",["^L",["^60",["^L",[["^6I","^8Q","^8R","^6J"]]]]],"^6K",["^G",["^6=","^6>","^6?","^6B","^6C","^3E","^6D"]],"^W","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",24,"^8",16,"^9",24,"^:",23,"^6Y","^7U","^5[",true,"^K",["^L",["^60",["^L",[["~$x"]]]]]],"^5[",true,"^O","^2:","^6","reagent/ratom.cljs","^:",23,"^63",["^L",[["~$x"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^7",24,"^67","^7U","^9",24,"^69",1,"^6Y","^7U","^6:",true,"^K",["^L",["^60",["^L",[["~$x"]]]]]],"~$->RAtom",["^ ","^5Z",null,"^5",["^ ","^6<",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^2M","^6U","^3E","^6D","^6V"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6E","^6F","^7",137,"^9",137,"^K",["^L",["^60",["^L",[["^6I","^70","^71","^6J"]]]]],"^6K",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^6U","^3E","^6D","^6V"]],"^W","Positional factory function for reagent.ratom/RAtom."],"^6<",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^2M","^6U","^3E","^6D","^6V"]],"^O","^20","^6","reagent/ratom.cljs","^:",15,"^63",["^L",[["^6I","^70","^71","^6J"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",137,"^67","^3O","^9",137,"^69",4,"^6:",true,"^K",["^L",["^60",["^L",[["^6I","^70","^71","^6J"]]]]],"^6K",["^G",["^6=","^6>","^6?","^6@","^6B","^6C","^6U","^3E","^6D","^6V"]],"^W","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^5Z",null,"^5",["^ ","^6<",["^G",["^6?","^6@","^2M","^3E","^6D"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6E","^6F","^7",216,"^9",216,"^K",["^L",["^60",["^L",[["~$f","^6R","^T"]]]]],"^6K",["^G",["^6?","^6@","^3E","^6D"]],"^W","Positional factory function for reagent.ratom/Track."],"^6<",["^G",["^6?","^6@","^2M","^3E","^6D"]],"^O","^3>","^6","reagent/ratom.cljs","^:",15,"^63",["^L",[["~$f","^6R","^T"]]],"^64",null,"^65",["^L",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",216,"^67","^3D","^9",216,"^69",3,"^6:",true,"^K",["^L",["^60",["^L",[["~$f","^6R","^T"]]]]],"^6K",["^G",["^6?","^6@","^3E","^6D"]],"^W","Positional factory function for reagent.ratom/Track."]],"^1;",["^ ","^R","^R","^D","^D","^13","^13"],"~:cljs.analyzer/constants",["^ ","^19",["^G",["~:on-set","^7>","^7<","^7M","^T","^8Q","^5","~:else","^6H","^6R","~:validator","^6J","^70","^71","^7:","~:no-cache","^6G","^6I","~:auto-run","~:on-dispose","^6Y","~:mutable","^8R","^7=","^7;","~$f"]],"~:order",["^6I","^91","^70","^71","^6J","^5","^8Y","^8X","^90","~$f","^6R","^T","^8[","^6G","^6H","^8W","^8Z","^7:","^6Y","^7M","^7;","^7<","^7=","^7>","^8Q","^8R"]],"^1C",["^ ","^1;",["^G",[]],"^1:",["^G",[]]],"^1D",["^ "],"^1E",["^14","^13","^10","^D","^15","^16","^12"]],"^Q","^R","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^41",[["^95","~:static-fns"],true,["^95","~:shadow-tweaks"],null,["^95","~:source-map-inline"],null,["^95","~:elide-asserts"],true,["^95","~:optimize-constants"],null,["^95","^1J"],null,["^95","~:external-config"],null,["^95","~:tooling-config"],null,["^95","~:emit-constants"],null,["^95","~:load-tests"],false,["^95","~:form-size-threshold"],null,["^95","~:data-readers"],null,["^95","~:infer-externs"],"~:auto",["^95","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^95","~:fn-invoke-direct"],null,["^95","~:source-map"],null]]]